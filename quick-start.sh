#!/bin/bash

# Evilginx Campaign Simulator - Quick Start Script
# EDUCATIONAL USE ONLY - Ensure proper authorization before use

set -e

echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
echo "‚ïë                    EVILGINX CAMPAIGN SIMULATOR                       ‚ïë"
echo "‚ïë                         QUICK START SETUP                           ‚ïë"
echo "‚ïë                                                                      ‚ïë"
echo "‚ïë  ‚ö†Ô∏è  WARNING: EDUCATIONAL USE ONLY                                   ‚ïë"
echo "‚ïë  Ensure you have proper authorization before proceeding              ‚ïë"
echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
echo

# Check for required dependencies
echo "üîç Checking system requirements..."

# Check Python 3.8+
if ! command -v python3 &> /dev/null; then
    echo "‚ùå Python 3 is required but not installed."
    exit 1
fi

PYTHON_VERSION=$(python3 --version | cut -d' ' -f2 | cut -d'.' -f1,2)
REQUIRED_VERSION="3.8"

if [ "$(echo "$PYTHON_VERSION < $REQUIRED_VERSION" | bc -l)" = "1" ]; then
    echo "‚ùå Python 3.8+ is required. Found: $PYTHON_VERSION"
    exit 1
fi

echo "‚úÖ Python $PYTHON_VERSION found"

# Check pip
if ! command -v pip3 &> /dev/null; then
    echo "‚ùå pip3 is required but not installed."
    exit 1
fi

echo "‚úÖ pip3 found"

# Create virtual environment
echo "üõ†Ô∏è  Setting up virtual environment..."
if [ ! -d "venv" ]; then
    python3 -m venv venv
    echo "‚úÖ Virtual environment created"
else
    echo "‚úÖ Virtual environment already exists"
fi

# Activate virtual environment
echo "üîå Activating virtual environment..."
source venv/bin/activate

# Install dependencies
echo "üì¶ Installing Python dependencies..."
pip install -r requirements.txt

# Check if authorization file exists
echo "üîí Checking authorization status..."
if [ ! -f "config/authorization.json" ]; then
    echo "‚ö†Ô∏è  Authorization file not found"
    echo "üìù Creating authorization template..."
    
    mkdir -p config
    
    cat > config/authorization.json << EOF
{
  "authorized": false,
  "authorized_by": "REQUIRED - Name and title of authorizing person",
  "organization": "REQUIRED - Organization name", 
  "purpose": "REQUIRED - Specific purpose (e.g., 'Security Awareness Training')",
  "scope": "REQUIRED - Scope of testing",
  "authorization_date": "REQUIRED - ISO format date",
  "expiry_date": "REQUIRED - ISO format date (max 30 days)",
  "contact_email": "REQUIRED - Contact email for authorization",
  "emergency_contact": "REQUIRED - Emergency contact information"
}
EOF
    
    echo "üìã Authorization template created at config/authorization.json"
    echo "üö® IMPORTANT: You must complete the authorization form before use!"
else
    # Check if authorization is properly filled
    if grep -q "REQUIRED" config/authorization.json; then
        echo "‚ö†Ô∏è  Authorization form is incomplete"
        echo "üö® IMPORTANT: Complete config/authorization.json before use!"
    else
        echo "‚úÖ Authorization file found"
    fi
fi

# Test basic import
echo "üß™ Testing installation..."
if python3 -c "import sys; sys.path.append('.'); from src.simulator import EvilginxSimulator; print('‚úÖ Installation test passed')" 2>/dev/null; then
    echo "‚úÖ Core modules imported successfully"
else
    echo "‚ùå Installation test failed"
    echo "Check the error messages above and ensure all dependencies are installed"
    exit 1
fi

# Display next steps
echo
echo "üéâ Setup completed successfully!"
echo
echo "üìã Next Steps:"
echo "1. Complete authorization form: config/authorization.json"
echo "2. Review ethical guidelines: docs/ethical-guidelines.md"
echo "3. Review safety guide: docs/safety-guide.md"
echo "4. Create your first campaign: python3 -c 'from examples import create_sample_campaign; create_sample_campaign()'"
echo "5. Read implementation guide: docs/implementation-guide.md"
echo
echo "üîó Quick Commands:"
echo "  ‚Ä¢ View documentation: ls docs/"
echo "  ‚Ä¢ Create sample campaign: python3 examples/sample_campaign.py"
echo "  ‚Ä¢ Run tests: python3 -m pytest (if tests are available)"
echo
echo "‚ö†Ô∏è  CRITICAL REMINDERS:"
echo "  ‚Ä¢ This tool is for EDUCATIONAL USE ONLY"
echo "  ‚Ä¢ Obtain written authorization before any testing"
echo "  ‚Ä¢ Follow all legal and ethical guidelines"
echo "  ‚Ä¢ Review docs/ethical-guidelines.md thoroughly"
echo
echo "üÜò Support:"
echo "  ‚Ä¢ Documentation: docs/"
echo "  ‚Ä¢ Implementation guide: docs/implementation-guide.md"
echo "  ‚Ä¢ Safety guide: docs/safety-guide.md"
echo
echo "Happy (ethical) hacking! üõ°Ô∏è"